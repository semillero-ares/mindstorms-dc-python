{"config":{"indexing":"full","lang":["es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Control de LEGO Mindstorms desde Python Aqu\u00ed presentamos un tutorial para controlar desde Python dos versiones muy populares de LEGO Mindstorms el NXT y el EV3 . Para cada uno de esto existen unos paquetes en python que nos permitir\u00e1n el control por USB, Bluetooth o Wi-Fi (disponible solo en el EV3). Para el LEGO Mindstorms NXT tenemos el paquete nxt-python Para el LEGO Mindstorms EV3 tenemos el paquete ev3-dc En ambos casos tambien necesitaremos dos paquetes auxiliares, los cuales son: PyUSB para la conexi\u00f3n por cable USB. PyBluez para la conexi\u00f3n Bluetooth. Dependiendo de la conexi\u00f3n que queramos hacer, necesitaremos configurar nuestro computador para controlar exitosamente nuestro LEGO. Requerimientos Para controlar del LEGO con un computador necesitaremos: Un LEGO MindStorms NXT o EV3 Un computador con Wi-Fi y/o Bluetooth dependiendo de la conexi\u00f3n. Si no tenemos un computador con Wi-Fi o bluetooth podemos comprar un dongle USB con esta capacidad. Python instalado en el PC, la versi\u00f3n de Python debe ser 3.x hasta la versi\u00f3n 3.11. Si tenemos una versi\u00f3n superior a la 3.11, deberemos configurar un ambiente virtual . Instalaci\u00f3n de los paquetes necesarios. En la siguiente p\u00e1gina empezaremos configurando el ambiente virtual.","title":"Control de LEGO Mindstorms desde Python"},{"location":"#control-de-lego-mindstorms-desde-python","text":"Aqu\u00ed presentamos un tutorial para controlar desde Python dos versiones muy populares de LEGO Mindstorms el NXT y el EV3 . Para cada uno de esto existen unos paquetes en python que nos permitir\u00e1n el control por USB, Bluetooth o Wi-Fi (disponible solo en el EV3). Para el LEGO Mindstorms NXT tenemos el paquete nxt-python Para el LEGO Mindstorms EV3 tenemos el paquete ev3-dc En ambos casos tambien necesitaremos dos paquetes auxiliares, los cuales son: PyUSB para la conexi\u00f3n por cable USB. PyBluez para la conexi\u00f3n Bluetooth. Dependiendo de la conexi\u00f3n que queramos hacer, necesitaremos configurar nuestro computador para controlar exitosamente nuestro LEGO.","title":"Control de LEGO Mindstorms desde Python"},{"location":"#requerimientos","text":"Para controlar del LEGO con un computador necesitaremos: Un LEGO MindStorms NXT o EV3 Un computador con Wi-Fi y/o Bluetooth dependiendo de la conexi\u00f3n. Si no tenemos un computador con Wi-Fi o bluetooth podemos comprar un dongle USB con esta capacidad. Python instalado en el PC, la versi\u00f3n de Python debe ser 3.x hasta la versi\u00f3n 3.11. Si tenemos una versi\u00f3n superior a la 3.11, deberemos configurar un ambiente virtual . Instalaci\u00f3n de los paquetes necesarios. En la siguiente p\u00e1gina empezaremos configurando el ambiente virtual.","title":"Requerimientos"},{"location":"ambiente-virtual/","text":"Creaci\u00f3n del ambiente virtual Para la configuraci\u00f3n del ambiente virtual usaremos el paquete virtualenv y seguiremos los pasos a continuaci\u00f3n, Los pasos se presentan para usuarios de WINDOWS . Verificar que tenemos Python y PIP instalados. Para verificar Python en un terminal escribiremos: python --version Para verificar PIP en un terminal escribiremos: pip --version Si no tenemos errores tendremos instalados Python y PIP, si hay alg\u00fan error buscar en linea soluciones. Instalar virtualenv : Para la instalaci\u00f3n en un terminal escribiremos: python -m pip install virtualenv Crear el ambiente virtual Crearemos un ambiente virtual con el nombre que quieran, en mi caso, usare LEGO para mi ambiente. En un terminal escribiremos: python -m virtualenv -p python3.11 LEGO En la creaci\u00f3n de este ambiente estoy declarando la versi\u00f3n de python que voy a usar, esto es necesario para usar el bluetooth, ya que a d\u00eda de hoy (2024-08-26) el paquete pybluez no soporta python 3.12. Activar el ambiente virtual Cada vez que vayamos a utilizar nuestro programa de python para controlar el LEGO, deberemos activar el ambiente virtual. Para esto, estando en la misma carpeta de donde creamos el ambiente virtual, en el terminal escribiremos: .\\LEGO\\Scripts\\activate As\u00ed aparecera la palabra LEGO al inicio del la l\u00ednea en el Terminal y tendremos activado el ambiente virtual.","title":"Creaci\u00f3n del ambiente virtual"},{"location":"ambiente-virtual/#creacion-del-ambiente-virtual","text":"Para la configuraci\u00f3n del ambiente virtual usaremos el paquete virtualenv y seguiremos los pasos a continuaci\u00f3n, Los pasos se presentan para usuarios de WINDOWS . Verificar que tenemos Python y PIP instalados. Para verificar Python en un terminal escribiremos: python --version Para verificar PIP en un terminal escribiremos: pip --version Si no tenemos errores tendremos instalados Python y PIP, si hay alg\u00fan error buscar en linea soluciones. Instalar virtualenv : Para la instalaci\u00f3n en un terminal escribiremos: python -m pip install virtualenv Crear el ambiente virtual Crearemos un ambiente virtual con el nombre que quieran, en mi caso, usare LEGO para mi ambiente. En un terminal escribiremos: python -m virtualenv -p python3.11 LEGO En la creaci\u00f3n de este ambiente estoy declarando la versi\u00f3n de python que voy a usar, esto es necesario para usar el bluetooth, ya que a d\u00eda de hoy (2024-08-26) el paquete pybluez no soporta python 3.12. Activar el ambiente virtual Cada vez que vayamos a utilizar nuestro programa de python para controlar el LEGO, deberemos activar el ambiente virtual. Para esto, estando en la misma carpeta de donde creamos el ambiente virtual, en el terminal escribiremos: .\\LEGO\\Scripts\\activate As\u00ed aparecera la palabra LEGO al inicio del la l\u00ednea en el Terminal y tendremos activado el ambiente virtual.","title":"Creaci\u00f3n del ambiente virtual"},{"location":"siguiente/","text":"Siguientes Pasos Los siguiente pasos depender\u00e1n del modelo de LEGO que tengas, continuar con la instalaci\u00f3n de los paquetes dependiendo de tu modelo NXT o EV3 .","title":"Siguientes Pasos"},{"location":"siguiente/#siguientes-pasos","text":"Los siguiente pasos depender\u00e1n del modelo de LEGO que tengas, continuar con la instalaci\u00f3n de los paquetes dependiendo de tu modelo NXT o EV3 .","title":"Siguientes Pasos"},{"location":"EV3/1-instalacion-paquetes/","text":"Instalaci\u00f3n de los paquetes Para instalar los paquetes vamos a activar el ambiente virtual, y una vez activado vamos a escribir en un terminal. pip install ev3-dc pip install git+https://github.com/pybluez/pybluez.git#egg=pybluez Con esto ya tendremos todo lo necesarios para controlar nuestro LEGO EV3 desde un PC usando Python. Si se presenta alg\u00fan error con la instalaci\u00f3n hacer la instalaci\u00f3n usando el archivo requirements.txt . Con el archivo descargado escribiremos en el terminal: pip install -r requirements.txt","title":"Instalaci\u00f3n de los paquetes"},{"location":"EV3/1-instalacion-paquetes/#instalacion-de-los-paquetes","text":"Para instalar los paquetes vamos a activar el ambiente virtual, y una vez activado vamos a escribir en un terminal. pip install ev3-dc pip install git+https://github.com/pybluez/pybluez.git#egg=pybluez Con esto ya tendremos todo lo necesarios para controlar nuestro LEGO EV3 desde un PC usando Python. Si se presenta alg\u00fan error con la instalaci\u00f3n hacer la instalaci\u00f3n usando el archivo requirements.txt . Con el archivo descargado escribiremos en el terminal: pip install -r requirements.txt","title":"Instalaci\u00f3n de los paquetes"},{"location":"EV3/2-usb/","text":"Conexi\u00f3n usando USB Para conectar el LEGO EV3 por USB al PC, necesitaremos tener un programa adicional instalado: Instalar el software LibUSB para Windows . Este programa nos ayudar\u00e1 a que la conexi\u00f3n USB sea reconocida por PyUSB en Python. Para instalar el LEGO EV3 usaremos el Filter Wizard , abrimos la aplicaci\u00f3n hacemos clic en siguiente, seleccionamos el EV3 (el cual debe estar conectado al PC y prendido, el VID problamente es 0694 ) y lo instalamos. Verificar la conexi\u00f3n del LEGO EV3: Para la verificaci\u00f3n usaremos el siguiente c\u00f3digo , recordemos activar el ambiente virtual. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . USB ) as my_robot : print ( my_robot ) C\u00f3digo tomado de la documentaci\u00f3n de ev3-dc Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . USB , host = '00:16:53:50:8A:86' ) as brick : print ( brick ) # Conectar el motor en el Puerto A my_motor = ev3 . Motor ( ev3 . PORT_A , ev3_obj = brick ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . start_move_to ( 360 , speed = 25 ) while my_motor . busy : pass # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . start_move_to ( 0 , speed = 25 ) while my_motor . busy : pass Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando USB"},{"location":"EV3/2-usb/#conexion-usando-usb","text":"Para conectar el LEGO EV3 por USB al PC, necesitaremos tener un programa adicional instalado: Instalar el software LibUSB para Windows . Este programa nos ayudar\u00e1 a que la conexi\u00f3n USB sea reconocida por PyUSB en Python. Para instalar el LEGO EV3 usaremos el Filter Wizard , abrimos la aplicaci\u00f3n hacemos clic en siguiente, seleccionamos el EV3 (el cual debe estar conectado al PC y prendido, el VID problamente es 0694 ) y lo instalamos. Verificar la conexi\u00f3n del LEGO EV3: Para la verificaci\u00f3n usaremos el siguiente c\u00f3digo , recordemos activar el ambiente virtual. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . USB ) as my_robot : print ( my_robot ) C\u00f3digo tomado de la documentaci\u00f3n de ev3-dc Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . USB , host = '00:16:53:50:8A:86' ) as brick : print ( brick ) # Conectar el motor en el Puerto A my_motor = ev3 . Motor ( ev3 . PORT_A , ev3_obj = brick ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . start_move_to ( 360 , speed = 25 ) while my_motor . busy : pass # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . start_move_to ( 0 , speed = 25 ) while my_motor . busy : pass Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando USB"},{"location":"EV3/3-bluetooth/","text":"Conexi\u00f3n usando Bluetooth Para usar la conexi\u00f3n por bluetooth, debemos realizar las siguientes tareas: Emparejar el LEGO con el computador. Para esto, encenderemos el LEGO, buscaremos en el men\u00fa de herramientas la opci\u00f3n Bluetooth > Connections > Search . Esto iniciar\u00e1 la b\u00fasqueda del PC, despu\u00e9s de un rato aparecer\u00e1 en pantalla el nombre de tu computador (siempre y cuando, el PC tenga bluetooth, el bluetooth este en modo visible y encendido). Seleccionamos del PC, le damos conectar, y dejamos la contrase\u00f1a 1234. En el PC deber\u00e1 aparecer la solicitud, aceptamos la solicitud e ingresamos la contrase\u00f1a 1234. Obtener la direcci\u00f3n MAC del Bluetooth del lego. Para esto, encenderemos el LEGO, buscaremos en el men\u00fa de herramientas la opci\u00f3n Brick Info . Aparecer\u00e1 en pantalla informaci\u00f3n sobre el LEGO, de donde necesitaremos la \u00faltima informaci\u00f3n con nombre de ID . En el LEGO que estoy usando el ID es 001653508A86 este n\u00famero lo necesitaremos para conectarnos con el LEGO desde Python. Necesitaremos rescribirlos, agregando \" : \" cada dos caracteres, de la siguiente forma: 00:16:53:50:8A:86 Verificar que el PC ve el LEGO. Para esto usaremos el c\u00f3digo de Python que pueden descargar aqu\u00ed # Simple inquiry example import bluetooth nearby_devices = bluetooth . discover_devices ( lookup_names = True ) print ( \"Found {} devices.\" . format ( len ( nearby_devices ))) for addr , name in nearby_devices : print ( \" {} - {} \" . format ( addr , name )) En mi caso la respuesta despu\u00e9s de correr el c\u00f3digo (con el ambiente virtual activado) es: Found 1 devices. 00:16:53:50:8A:86 - EV3 Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . BLUETOOTH , host = '00:16:53:50:8A:86' ) as brick : # Conectar el motor en el Puerto A my_motor = ev3 . Motor ( ev3 . PORT_A , ev3_obj = brick ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . start_move_to ( 360 , speed = 25 ) while my_motor . busy : pass # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . start_move_to ( 0 , speed = 25 ) while my_motor . busy : pass Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando Bluetooth"},{"location":"EV3/3-bluetooth/#conexion-usando-bluetooth","text":"Para usar la conexi\u00f3n por bluetooth, debemos realizar las siguientes tareas: Emparejar el LEGO con el computador. Para esto, encenderemos el LEGO, buscaremos en el men\u00fa de herramientas la opci\u00f3n Bluetooth > Connections > Search . Esto iniciar\u00e1 la b\u00fasqueda del PC, despu\u00e9s de un rato aparecer\u00e1 en pantalla el nombre de tu computador (siempre y cuando, el PC tenga bluetooth, el bluetooth este en modo visible y encendido). Seleccionamos del PC, le damos conectar, y dejamos la contrase\u00f1a 1234. En el PC deber\u00e1 aparecer la solicitud, aceptamos la solicitud e ingresamos la contrase\u00f1a 1234. Obtener la direcci\u00f3n MAC del Bluetooth del lego. Para esto, encenderemos el LEGO, buscaremos en el men\u00fa de herramientas la opci\u00f3n Brick Info . Aparecer\u00e1 en pantalla informaci\u00f3n sobre el LEGO, de donde necesitaremos la \u00faltima informaci\u00f3n con nombre de ID . En el LEGO que estoy usando el ID es 001653508A86 este n\u00famero lo necesitaremos para conectarnos con el LEGO desde Python. Necesitaremos rescribirlos, agregando \" : \" cada dos caracteres, de la siguiente forma: 00:16:53:50:8A:86 Verificar que el PC ve el LEGO. Para esto usaremos el c\u00f3digo de Python que pueden descargar aqu\u00ed # Simple inquiry example import bluetooth nearby_devices = bluetooth . discover_devices ( lookup_names = True ) print ( \"Found {} devices.\" . format ( len ( nearby_devices ))) for addr , name in nearby_devices : print ( \" {} - {} \" . format ( addr , name )) En mi caso la respuesta despu\u00e9s de correr el c\u00f3digo (con el ambiente virtual activado) es: Found 1 devices. 00:16:53:50:8A:86 - EV3 Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import ev3_dc as ev3 with ev3 . EV3 ( protocol = ev3 . BLUETOOTH , host = '00:16:53:50:8A:86' ) as brick : # Conectar el motor en el Puerto A my_motor = ev3 . Motor ( ev3 . PORT_A , ev3_obj = brick ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . start_move_to ( 360 , speed = 25 ) while my_motor . busy : pass # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . start_move_to ( 0 , speed = 25 ) while my_motor . busy : pass Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando Bluetooth"},{"location":"EV3/4-wi-fi/","text":"Conexi\u00f3n usando Wi-Fi Solamente el LEGO MindStorms EV3 soporta la conexi\u00f3n Wi-Fi utilizando un [dongle Wi-Fi][WIFI] en el puerto USB tipo A que tiene este LEGO. En este momento no tengo el dongle para hacer las pruebas, pero pueden seguir los pasos de aqu\u00ed","title":"Conexi\u00f3n usando Wi-Fi"},{"location":"EV3/4-wi-fi/#conexion-usando-wi-fi","text":"Solamente el LEGO MindStorms EV3 soporta la conexi\u00f3n Wi-Fi utilizando un [dongle Wi-Fi][WIFI] en el puerto USB tipo A que tiene este LEGO. En este momento no tengo el dongle para hacer las pruebas, pero pueden seguir los pasos de aqu\u00ed","title":"Conexi\u00f3n usando Wi-Fi"},{"location":"NXT/1-instalacion-paquetes/","text":"Instalaci\u00f3n de los paquetes Para instalar los paquetes vamos a activar el ambiente virtual, y una vez activado vamos a escribir en un terminal. pip install nxt-python pip install git+https://github.com/pybluez/pybluez.git#egg=pybluez En caso de que se presente un error con la instalaci\u00f3n de PyBluez, podremos usar el wheel , este archivo de instalaci\u00f3n debe estar en concordancia con la versi\u00f3n de Python, el sistema Operativo y el procesador. pip install PyBluez-0.30-cp311-cp311-win_amd64.whl Python 3.11 | Window | AMD64 ~ PyBluez-0.30-cp311-cp311-win_amd64.whl Con esto ya tendremos todo lo necesarios para controlar nuestro LEGO NXT desde un PC usando Python. Si se presenta alg\u00fan error con la instalaci\u00f3n hacer la instalaci\u00f3n usando el archivo requirements.txt . Con el archivo descargado escribiremos en el terminal: pip install -r requirements.txt","title":"Instalaci\u00f3n de los paquetes"},{"location":"NXT/1-instalacion-paquetes/#instalacion-de-los-paquetes","text":"Para instalar los paquetes vamos a activar el ambiente virtual, y una vez activado vamos a escribir en un terminal. pip install nxt-python pip install git+https://github.com/pybluez/pybluez.git#egg=pybluez En caso de que se presente un error con la instalaci\u00f3n de PyBluez, podremos usar el wheel , este archivo de instalaci\u00f3n debe estar en concordancia con la versi\u00f3n de Python, el sistema Operativo y el procesador. pip install PyBluez-0.30-cp311-cp311-win_amd64.whl Python 3.11 | Window | AMD64 ~ PyBluez-0.30-cp311-cp311-win_amd64.whl Con esto ya tendremos todo lo necesarios para controlar nuestro LEGO NXT desde un PC usando Python. Si se presenta alg\u00fan error con la instalaci\u00f3n hacer la instalaci\u00f3n usando el archivo requirements.txt . Con el archivo descargado escribiremos en el terminal: pip install -r requirements.txt","title":"Instalaci\u00f3n de los paquetes"},{"location":"NXT/2-usb/","text":"Conexi\u00f3n usando USB Para conectar el LEGO NXT por USB al PC, necesitaremos tener dos programas adicionales instalados: Instalar el Controlador Fantom para NXT que pudiste descargar directamente del enlace anterior o de la p\u00e1gina de LEGO . Una vez instalador el controlador. Instalar el software LibUSB para Windows . Este programa nos ayudar\u00e1 a que la conexi\u00f3n USB sea reconocida por PyUSB en Python. Para instalar el LEGO NXT usaremos el Filter Wizard , abrimos la aplicaci\u00f3n hacemos clic en siguiente, seleccionamos el NXT (el cual debe estar conectado al PC y prendido) y lo instalamos. Verificar la conexi\u00f3n del LEGO NXT: Para la verificaci\u00f3n usaremos el siguiente c\u00f3digo , recordemos activar el ambiente virtual. import nxt.locator # Find a brick. with nxt . locator . find () as b : # Once found, print its name. print ( \"Found brick:\" , b . get_device_info ()) # And play a recognizable note. b . play_tone_and_wait ( 440 , 10000 ) C\u00f3digo tomado de la documentaci\u00f3n de nxt-python Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import nxt.locator import nxt.motor with nxt . locator . find () as b : # Conectar el motor en el Puerto A my_motor = b . get_motor ( nxt . motor . Port . A ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . turn ( 25 , 360 ) # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . turn ( - 25 , 360 ) Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando USB"},{"location":"NXT/2-usb/#conexion-usando-usb","text":"Para conectar el LEGO NXT por USB al PC, necesitaremos tener dos programas adicionales instalados: Instalar el Controlador Fantom para NXT que pudiste descargar directamente del enlace anterior o de la p\u00e1gina de LEGO . Una vez instalador el controlador. Instalar el software LibUSB para Windows . Este programa nos ayudar\u00e1 a que la conexi\u00f3n USB sea reconocida por PyUSB en Python. Para instalar el LEGO NXT usaremos el Filter Wizard , abrimos la aplicaci\u00f3n hacemos clic en siguiente, seleccionamos el NXT (el cual debe estar conectado al PC y prendido) y lo instalamos. Verificar la conexi\u00f3n del LEGO NXT: Para la verificaci\u00f3n usaremos el siguiente c\u00f3digo , recordemos activar el ambiente virtual. import nxt.locator # Find a brick. with nxt . locator . find () as b : # Once found, print its name. print ( \"Found brick:\" , b . get_device_info ()) # And play a recognizable note. b . play_tone_and_wait ( 440 , 10000 ) C\u00f3digo tomado de la documentaci\u00f3n de nxt-python Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import nxt.locator import nxt.motor with nxt . locator . find () as b : # Conectar el motor en el Puerto A my_motor = b . get_motor ( nxt . motor . Port . A ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . turn ( 25 , 360 ) # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . turn ( - 25 , 360 ) Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando USB"},{"location":"NXT/3-bluetooth/","text":"Conexi\u00f3n usando Bluetooth Para usar la conexi\u00f3n por bluetooth, debemos realizar las siguientes tareas: Emparejar el LEGO con el computador. Para esto, encenderemos el LEGO y buscaremos en el men\u00fa Bluetooth > Search . Esto iniciar\u00e1 la b\u00fasqueda del PC, despu\u00e9s de un rato aparecer\u00e1 en pantalla el nombre de tu computador (siempre y cuando, el PC tenga bluetooth, el bluetooth este en modo visible y encendido). Seleccionamos del PC, le damos conectar, y dejamos la contrase\u00f1a 1234. En el PC deber\u00e1 aparecer la solicitud, aceptamos la solicitud e ingresamos la contrase\u00f1a 1234. Obtener la direcci\u00f3n MAC del Bluetooth del lego. Para esto, encenderemos el LEGO y buscaremos en el men\u00fa Settings > NXT Version . Aparecer\u00e1 en pantalla informaci\u00f3n sobre el LEGO, de donde necesitaremos la \u00faltima informaci\u00f3n con nombre de ID . En el LEGO que estoy usando el ID es 0016531AA8B3 este n\u00famero lo necesitaremos para conectarnos con el LEGO desde Python. Necesitaremos rescribirlos, agregando \" : \" cada dos caracteres, de la siguiente forma: 00:16:53:1A:A8:B3 Verificar que el PC ve el LEGO. Para esto usaremos el c\u00f3digo de Python que pueden descargar aqu\u00ed # Simple inquiry example import bluetooth nearby_devices = bluetooth . discover_devices ( lookup_names = True ) print ( \"Found {} devices.\" . format ( len ( nearby_devices ))) for addr , name in nearby_devices : print ( \" {} - {} \" . format ( addr , name )) En mi caso la respuesta despu\u00e9s de correr el c\u00f3digo (con el ambiente virtual activado) es: Found 1 devices. 00:16:53:1A:A8:B3 - NXT Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import bluetooth as bluez import nxt.backend.bluetooth import nxt.locator brick = nxt . backend . bluetooth . BluetoothSock ( bluetooth = bluez , host = '00:16:53:1A:A8:B3' ) with brick . connect () as b : # Conectar el motor en el Puerto A my_motor = b . get_motor ( nxt . motor . Port . A ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . turn ( 25 , 360 ) # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . turn ( - 25 , 360 ) Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando Bluetooth"},{"location":"NXT/3-bluetooth/#conexion-usando-bluetooth","text":"Para usar la conexi\u00f3n por bluetooth, debemos realizar las siguientes tareas: Emparejar el LEGO con el computador. Para esto, encenderemos el LEGO y buscaremos en el men\u00fa Bluetooth > Search . Esto iniciar\u00e1 la b\u00fasqueda del PC, despu\u00e9s de un rato aparecer\u00e1 en pantalla el nombre de tu computador (siempre y cuando, el PC tenga bluetooth, el bluetooth este en modo visible y encendido). Seleccionamos del PC, le damos conectar, y dejamos la contrase\u00f1a 1234. En el PC deber\u00e1 aparecer la solicitud, aceptamos la solicitud e ingresamos la contrase\u00f1a 1234. Obtener la direcci\u00f3n MAC del Bluetooth del lego. Para esto, encenderemos el LEGO y buscaremos en el men\u00fa Settings > NXT Version . Aparecer\u00e1 en pantalla informaci\u00f3n sobre el LEGO, de donde necesitaremos la \u00faltima informaci\u00f3n con nombre de ID . En el LEGO que estoy usando el ID es 0016531AA8B3 este n\u00famero lo necesitaremos para conectarnos con el LEGO desde Python. Necesitaremos rescribirlos, agregando \" : \" cada dos caracteres, de la siguiente forma: 00:16:53:1A:A8:B3 Verificar que el PC ve el LEGO. Para esto usaremos el c\u00f3digo de Python que pueden descargar aqu\u00ed # Simple inquiry example import bluetooth nearby_devices = bluetooth . discover_devices ( lookup_names = True ) print ( \"Found {} devices.\" . format ( len ( nearby_devices ))) for addr , name in nearby_devices : print ( \" {} - {} \" . format ( addr , name )) En mi caso la respuesta despu\u00e9s de correr el c\u00f3digo (con el ambiente virtual activado) es: Found 1 devices. 00:16:53:1A:A8:B3 - NXT Probemos un codigo para mover un motor conectador en el Puerto A: El c\u00f3digo de prueba lo podemos descargar de aqu\u00ed , que es igual al mostrado a continuaci\u00f3n, Debemos cambiar la direcci\u00f3n MAC del LEGO por la correcta. import bluetooth as bluez import nxt.backend.bluetooth import nxt.locator brick = nxt . backend . bluetooth . BluetoothSock ( bluetooth = bluez , host = '00:16:53:1A:A8:B3' ) with brick . connect () as b : # Conectar el motor en el Puerto A my_motor = b . get_motor ( nxt . motor . Port . A ) print ( \"Presiona Ctrl-C para interrumpir el programa\" ) while True : # Har\u00e1 una rotaci\u00f3n completa en una direcci\u00f3n my_motor . turn ( 25 , 360 ) # Har\u00e1 una rotaci\u00f3n completa en la otra direcci\u00f3n my_motor . turn ( - 25 , 360 ) Para m\u00e1s informaci\u00f3n de las funciones que se pueden usar consultar la documentaci\u00f3n .","title":"Conexi\u00f3n usando Bluetooth"}]}